<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AJAX</title>
      <link href="/2022/03/05/AJAX/"/>
      <url>/2022/03/05/AJAX/</url>
      
        <content type="html"><![CDATA[<h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><h4 id="AJAX简介"><a href="#AJAX简介" class="headerlink" title="AJAX简介"></a>AJAX简介</h4><p>AJAX全称为Asynchronous JavasSript And XML，就是异步的js和xml。通过AJAX可以在浏览器中向服务器发送异步请求，最大的优势：无刷新获取数据。AJAX不是新的编程语言，而是将现有的标准组合在一起使用的新方式。</p><span id="more"></span><h4 id="XML-简介"><a href="#XML-简介" class="headerlink" title="XML 简介"></a>XML 简介</h4><p>XML(可拓展标记语言),被设计用来传输和存储数据。XML 和 HTML 类似，不同的是 HTML 都是预定义标签，而 XML 中没有预定义标签，全部都是自定义标签，用来表示一些数据</p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 比如有一个学生数据：name=&quot;Andy&quot;;age=&quot;18&quot;;sex=&quot;男&quot; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 用xml来表示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">student</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Andy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是现在已经被 json 取代了<br>用 json 表示</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Andy&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Ajax-的特点"><a href="#Ajax-的特点" class="headerlink" title="Ajax 的特点"></a>Ajax 的特点</h4><h5 id="AJAX-优点"><a href="#AJAX-优点" class="headerlink" title="AJAX 优点"></a>AJAX 优点</h5><ul><li>可以无需刷新页面而与服务器进行通信</li><li>允许你根据用户事件来更新部分页面内容</li></ul><h5 id="AJAX-缺点"><a href="#AJAX-缺点" class="headerlink" title="AJAX 缺点"></a>AJAX 缺点</h5><ul><li>没有浏览历史，不能回退</li><li>存在跨域问题（同源）</li><li>SEO(搜索引擎优化)不友好</li></ul><h4 id="HTTP-协议"><a href="#HTTP-协议" class="headerlink" title="HTTP 协议"></a>HTTP 协议</h4><p>HTTP 协议(超文本传输协议)，详细规定了浏览器与万维网服务器之间互相通信的规则</p><h5 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h5><p>重点是格式和参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">行 POST /s?ie=utf-8 HTTP/1.1</span><br><span class="line">头 Host: baidu.com</span><br><span class="line">   Cookie: name=baidu</span><br><span class="line">   Content-type: application/x-www-form-urlencoded</span><br><span class="line">   User-Agent: chrome 83</span><br><span class="line">空行</span><br><span class="line">体 username=admin&amp;password=admin</span><br></pre></td></tr></table></figure><h5 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">行 HTTP/1.1 200 OK</span><br><span class="line">头 Content-Type: text/html;charset=utf-8</span><br><span class="line">   Content-length:2048</span><br><span class="line">   Content-encoding:gzip</span><br><span class="line">空行</span><br><span class="line">体 &lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;hello world&lt;/h1&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安装-express"><a href="#安装-express" class="headerlink" title="安装 express"></a>安装 express</h4><ol><li>初始化</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --y</span><br></pre></td></tr></table></figure><ol start="2"><li>安装 express</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm express</span><br></pre></td></tr></table></figure><h4 id="使用-Ajax-进行网络请求"><a href="#使用-Ajax-进行网络请求" class="headerlink" title="使用 Ajax 进行网络请求"></a>使用 Ajax 进行网络请求</h4><p>前端代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span>  button=<span class="built_in">document</span>.querySelector(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> div=<span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>)</span></span><br><span class="line"><span class="javascript">        button.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 1.创建对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> xhr = <span class="keyword">new</span>  XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 2.初始化 设置请求方法和url</span></span></span><br><span class="line"><span class="javascript">            xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&quot;http://localhost:8080/serve&quot;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//3.发送</span></span></span><br><span class="line"><span class="javascript">            xhr.send();</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 4. 事件绑定,处理服务端返回的结果</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// on 当...的时候</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// readystate 是xhr对象中的属性，表示状态</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 0 未初始化 1 open()方法调用完毕 2 send()方法调用完毕 3 服务端返回部分结果 4 服务端返回所有结果</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// change 改变</span></span></span><br><span class="line"><span class="javascript">            xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 判断(服务端返回了所有的结果)</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(xhr.readyState===<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 判断相应状态码 200 404 403 500</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 2xx 表示成功</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(xhr.status&gt;=<span class="number">200</span>&amp;&amp;xhr.status&lt;<span class="number">300</span>)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(xhr.status); <span class="comment">//状态码</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(xhr.statusText);<span class="comment">//状态字符串</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(xhr.getAllResponseHeaders());<span class="comment">//所有响应头</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(xhr.response);<span class="comment">//响应体</span></span></span><br><span class="line"><span class="javascript">                        div.innerHTML=xhr.response;<span class="comment">//将相应体内容渲染到div中</span></span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;error&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后端代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建路由规则</span></span><br><span class="line"><span class="comment">// request 是对请求报文的封装</span></span><br><span class="line"><span class="comment">// response 是对响应报文的封装</span></span><br><span class="line">app.get(<span class="string">&quot;/serve&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.send(<span class="string">&quot;hello express&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务已启动，8080&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Ajax-设置请求参数"><a href="#Ajax-设置请求参数" class="headerlink" title="Ajax 设置请求参数"></a>Ajax 设置请求参数</h4><p>通过地址栏传参<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.baidu.com/s?wd=bilibili //访问百度搜索哔哩哔哩结果</span><br></pre></td></tr></table></figure><p>在 Ajax 中，也可在 url 后面追加参数<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000?a=100&amp;b=200&amp;c=300</span><br></pre></td></tr></table></figure><h4 id="Ajax-发送-post-请求"><a href="#Ajax-发送-post-请求" class="headerlink" title="Ajax 发送 post 请求"></a>Ajax 发送 post 请求</h4><p>serve.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建路由规则</span></span><br><span class="line"><span class="comment">// request 是对请求报文的封装</span></span><br><span class="line"><span class="comment">// response 是对响应报文的封装</span></span><br><span class="line">app.get(<span class="string">&quot;/serve&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.send(<span class="string">&quot;hello express&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.post(<span class="string">&quot;/serve&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.send(<span class="string">&quot;hello express POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务已启动，8080&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>: solid <span class="number">1px</span> skyblue;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> button = <span class="built_in">document</span>.querySelector(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="javascript">      button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1.创建对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 2.初始化 设置请求方法和url</span></span></span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;http://localhost:8080/serve&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//3.发送</span></span></span><br><span class="line"><span class="javascript">        xhr.send(<span class="string">&quot;a=100&amp;b=200&amp;c=300&quot;</span>); <span class="comment">//post请求可以设置参数</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 4. 事件绑定,处理服务端返回的结果</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// on 当...的时候</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// readystate 是xhr对象中的属性，表示状态</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 0 未初始化 1 open()方法调用完毕 2 send()方法调用完毕 3 服务端返回部分结果 4 服务端返回所有结果</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// change 改变</span></span></span><br><span class="line"><span class="javascript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 判断(服务端返回了所有的结果)</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 判断相应状态码 200 404 403 500</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 2xx 表示成功</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.status); <span class="comment">//状态码</span></span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.statusText); <span class="comment">//状态字符串</span></span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.getAllResponseHeaders()); <span class="comment">//所有响应头</span></span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.response); <span class="comment">//响应体</span></span></span><br><span class="line"><span class="javascript">              div.innerHTML = xhr.response; <span class="comment">//将相应体内容渲染到div中</span></span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">&quot;error&quot;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="设置请求头信息"><a href="#设置请求头信息" class="headerlink" title="设置请求头信息"></a>设置请求头信息</h4><p>在 open 方法后面使用 setRequestHeader 方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.setRequestHeader(&#x27;Content-Type&#x27;,&#x27;application/x-www-form-urlencoded&#x27;)//设置请求报文格式</span><br></pre></td></tr></table></figure><p>还可以设置自定义方法<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.setRequestHeader(&#x27;name&#x27;,&#x27;Andy&#x27;)</span><br></pre></td></tr></table></figure><p>但是设置自定义方法需要在后端设置允许自定义头，并使用 all 请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.all(&#x27;/serve&#x27;,(request,response)=&gt;&#123;</span><br><span class="line">    // 设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;,&#x27;*&#x27;)</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;,&#x27;*&#x27;)</span><br><span class="line">    // 设置响应体</span><br><span class="line">    response.send(&#x27;hello express POST&#x27;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="服务端响应-json-数据"><a href="#服务端响应-json-数据" class="headerlink" title="服务端响应 json 数据"></a>服务端响应 json 数据</h4><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>: solid <span class="number">1px</span> skyblue;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> button = <span class="built_in">document</span>.querySelector(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="javascript">      button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1.创建对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        xhr.responseType = <span class="string">&quot;json&quot;</span>; <span class="comment">//设置响应体对象类型</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 2.初始化 设置请求方法和url</span></span></span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;http://localhost:8080/serve/json&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//3.发送</span></span></span><br><span class="line"><span class="javascript">        xhr.send();</span></span><br><span class="line"><span class="javascript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 判断(服务端返回了所有的结果)</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 判断相应状态码 200 404 403 500</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 2xx 表示成功</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.status); <span class="comment">//状态码</span></span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.statusText); <span class="comment">//状态字符串</span></span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.getAllResponseHeaders()); <span class="comment">//所有响应头</span></span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(xhr.response); <span class="comment">//响应体</span></span></span><br><span class="line"><span class="javascript">              <span class="comment">//手动转换</span></span></span><br><span class="line"><span class="javascript">              <span class="comment">// let data=JSON.parse(xhr.response)</span></span></span><br><span class="line"><span class="javascript">              <span class="comment">// div.innerHTML=data.name;</span></span></span><br><span class="line"><span class="javascript">              <span class="comment">//自动转换，需设置xhr响应对象类型 第25行</span></span></span><br><span class="line"><span class="javascript">              div.innerHTML = xhr.response.name;</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">&quot;error&quot;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>serve.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&quot;/serve/json&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Andy&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">  response.send(str); <span class="comment">//只能发送字符串</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务已启动，8080&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="nodemon-自动重启工具"><a href="#nodemon-自动重启工具" class="headerlink" title="nodemon 自动重启工具"></a>nodemon 自动重启工具</h4><p>安装 nodemon 工具后更新 serve.js 代码后无需手动重启服务<br>安装指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g nodemon</span><br></pre></td></tr></table></figure><h4 id="请求超时与网络异常处理"><a href="#请求超时与网络异常处理" class="headerlink" title="请求超时与网络异常处理"></a>请求超时与网络异常处理</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//1.请求超时</span><br><span class="line">//设置超时时间2s</span><br><span class="line">xhr.timeout=2000</span><br><span class="line">// 超时回调</span><br><span class="line">xhr.ontimeout=function()&#123;</span><br><span class="line">    alert(&quot;网络请求超时&quot;)</span><br><span class="line">&#125;</span><br><span class="line">//2.网络异常</span><br><span class="line">xhr.onerror=function()&#123;</span><br><span class="line">    alert(&quot;网络异常&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h4><p>abort 方法可以取消请求<br>示例代码<br>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击取消请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> xhr = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">      btns[<span class="number">0</span>].addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;http://localhost:8080/serve/delay&quot;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send();</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">      btns[<span class="number">1</span>].addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        xhr.abort();</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>serve.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.get(<span class="string">&quot;/serve/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    response.send(<span class="string">&quot;hello express&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务已启动，8080&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="重复发送请求问题"><a href="#重复发送请求问题" class="headerlink" title="重复发送请求问题"></a>重复发送请求问题</h4><p>如果用户一直向服务器发送请求会导致服务器压力过大<br>解决方法：<br>判断用户有无发送重复请求，如果有，则取消之前的请求重新发送一个新的请求。<br>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> xhr = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//表示变量, 判断是否正在发送ajax请求</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> isSending = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">      btns[<span class="number">0</span>].addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (isSending) &#123;</span></span><br><span class="line"><span class="javascript">          xhr.abort(); <span class="comment">//如果请求正在发送，则取消该请求。</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 修改标识变量的值</span></span></span><br><span class="line"><span class="javascript">        isSending = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;http://localhost:8080/serve/delay&quot;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send();</span></span><br><span class="line"><span class="javascript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 修改标识变量</span></span></span><br><span class="line"><span class="javascript">            isSending = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>serve.js 代码与上一节一致</p><h4 id="jquery-发送-Ajax-请求"><a href="#jquery-发送-Ajax-请求" class="headerlink" title="jquery 发送 Ajax 请求"></a>jquery 发送 Ajax 请求</h4><ol><li>get 请求</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.get(url,[data],[callback],[type])</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>url</td><td>请求的 url 地址</td></tr><tr><td>data</td><td>请求携带的参数</td></tr><tr><td>callback</td><td>载入成功时回调函数</td></tr><tr><td>type</td><td>设置返回内容格式(xml、html、script、json、test)</td></tr></tbody></table><ol start="2"><li>post 请求</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.post(url,[data],[callback],[type])</span><br></pre></td></tr></table></figure><ol start="3"><li>通用方法</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">  url: &quot;test.html&quot;,</span><br><span class="line">  cache: false,</span><br><span class="line">  success: function(html)&#123;</span><br><span class="line">    $(&quot;#results&quot;).append(html);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其他更多设置可访问<a href="https://jquery.cuishifeng.cn/jQuery.Ajax.html">https://jquery.cuishifeng.cn/jQuery.Ajax.html</a></p><p>示例代码：<br>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>点击发送GET请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span>点击发送POST请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">          .eq(<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">          .click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $.get(</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;http://localhost:8080/serve&quot;</span>,</span></span><br><span class="line"><span class="javascript">              &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="javascript">              <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="javascript">              &#125;</span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">          .eq(<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">          .click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $.post(</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;http://localhost:8080/serve&quot;</span>,</span></span><br><span class="line"><span class="javascript">              &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="javascript">              <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="javascript">              &#125;</span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">          .eq(<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">          .click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">              <span class="comment">//url</span></span></span><br><span class="line"><span class="javascript">              <span class="attr">url</span>: <span class="string">&quot;http://localhost:8080/serve&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="comment">//参数</span></span></span><br><span class="line"><span class="javascript">              <span class="attr">data</span>: &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="javascript">              <span class="comment">// 请求类型</span></span></span><br><span class="line"><span class="javascript">              <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="comment">//成功时的回调</span></span></span><br><span class="line"><span class="javascript">              <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="javascript">              &#125;,</span></span><br><span class="line"><span class="javascript">              <span class="comment">// 失败时的回调</span></span></span><br><span class="line"><span class="javascript">              <span class="attr">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;error&quot;</span>);</span></span><br><span class="line"><span class="javascript">              &#125;,</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>serve.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.all(<span class="string">&quot;/serve&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.send(<span class="string">&quot;hello jquery Ajax&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务已启动，8080&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="axios-发送-ajax-请求"><a href="#axios-发送-ajax-请求" class="headerlink" title="axios 发送 ajax 请求"></a>axios 发送 ajax 请求</h4><h5 id="get-请求"><a href="#get-请求" class="headerlink" title="get 请求"></a>get 请求</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&quot;axios&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Make a request for a user with a given ID</span></span><br><span class="line">axios</span><br><span class="line">  .get(<span class="string">&quot;/user?ID=12345&quot;</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// handle success</span></span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// handle error</span></span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// always executed</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Optionally the request above could also be done as</span></span><br><span class="line">axios</span><br><span class="line">  .get(<span class="string">&quot;/user&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">ID</span>: <span class="number">12345</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// always executed</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Want to use async/await? Add the `async` keyword to your outer function/method.</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getUser</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> axios.get(<span class="string">&quot;/user?ID=12345&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="post-请求"><a href="#post-请求" class="headerlink" title="post 请求"></a>post 请求</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios</span><br><span class="line">  .post(<span class="string">&quot;/user&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;Fred&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>: <span class="string">&quot;Flintstone&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h5 id="axios-函数"><a href="#axios-函数" class="headerlink" title="axios 函数"></a>axios 函数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Send a POST request</span></span><br><span class="line">axios(&#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&quot;/user/12345&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;Fred&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>: <span class="string">&quot;Flintstone&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// GET request for remote image in node.js</span></span><br><span class="line">axios(&#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&quot;http://bit.ly/2mTM3nY&quot;</span>,</span><br><span class="line">  <span class="attr">responseType</span>: <span class="string">&quot;stream&quot;</span>,</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">  response.data.pipe(fs.createWriteStream(<span class="string">&quot;ada_lovelace.jpg&quot;</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>更多用法查询网址 <a href="https://github.com/axios/axios#axios-api">https://github.com/axios/axios#axios-api</a></p><h4 id="使用-fetch-函数发送-ajax-请求"><a href="#使用-fetch-函数发送-ajax-请求" class="headerlink" title="使用 fetch 函数发送 ajax 请求"></a>使用 fetch 函数发送 ajax 请求</h4><p>用法：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch">https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch</a><br>示例代码：<br>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/axios/0.26.0/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> button = <span class="built_in">document</span>.querySelector(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        fetch(<span class="string">&quot;http://localhost:8080/serve&quot;</span>, &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 请求方法</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 请求体</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">body</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">username</span>: <span class="string">&quot;admin&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">password</span>: <span class="string">&quot;123456&quot;</span>,</span></span><br><span class="line"><span class="javascript">          &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">          .then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> response.text();</span></span><br><span class="line"><span class="javascript">          &#125;)</span></span><br><span class="line"><span class="javascript">          .then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>serve.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.all(<span class="string">&quot;/serve&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头</span></span><br><span class="line">  response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.send(<span class="string">&quot;hello  fetch&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;服务已启动，8080&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h4><h5 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h5><ul><li>同源策略最早由 Netscape 公司提出，是浏览器的一种安全策略。</li><li>同源：协议、域名、端口号必须完全相同</li><li>违背同源策略就是跨域</li></ul><h5 id="如何解决跨域"><a href="#如何解决跨域" class="headerlink" title="如何解决跨域"></a>如何解决跨域</h5><h6 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h6><ol><li>JSONP 是什么<br>JSONP(json with padding)，是一个非官方的跨域解决方案，纯粹是凭借程序员的聪明才智开发出来，只支持 get 请求</li><li>JSONP 怎么工作的？<br>在网页内有一些标签天生具有跨域能力，比如：img link iframe script<br>JSONP 就是利用 script 标签的跨域能力来发送跨域请求的</li></ol><h6 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h6><ol><li>CORS 是什么<br> CORS(Cross-Origin Resource Sharing),跨域资源共享。CORS 是官方的跨域解决方案，它的特点是不需要在客户端做任何特殊的操作，完全在服务器中进行处理，支持 get 和 post 请求。跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器由权限访问哪些资源</li><li>CORS 怎么工作的？<br> CORS 是通过一个响应头来告诉浏览器，该请求允许跨域，浏览器收到该响应以后就会对响应放行</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> AJAX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery</title>
      <link href="/2022/02/27/jQuery/"/>
      <url>/2022/02/27/jQuery/</url>
      
        <content type="html"><![CDATA[<h4 id="jquery-入口函数"><a href="#jquery-入口函数" class="headerlink" title="jquery 入口函数"></a>jquery 入口函数</h4><p>方式一：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// code</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// code</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><span id="more"></span><p>这两种方式是等 DOM 结构渲染完毕即可执行内部代码</p><h4 id="DOM-对象和-jQuery-对象"><a href="#DOM-对象和-jQuery-对象" class="headerlink" title="DOM 对象和 jQuery 对象"></a>DOM 对象和 jQuery 对象</h4><blockquote><p>用 js 传统方式获取过来的就是 DOM 对象，用 jQuery 方式获取过来的是 jQuery 对象，<br>jQuery 对象只能使用 jQuery 的属性和方法，DOM 对象使用 js 原生的属性和方法。</p></blockquote><p>DOM 对象与 jQuery 对象之间是可以相互转换的<br>因为 js 比 jQuery 更大，原生的一些属性和方法 jQuery 没有给我们封装，要想使用这些方法需要把 jQuery 对象转换为 DOM 对象才能使用<br>1.DOM 对象转换为 jQuery 对象： $(DOM 对象)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">$(div);</span><br></pre></td></tr></table></figure><p>2.jQuery 对象转换为 DOM 对象（两种方式）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>)[index] index是索引号</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).get(index) index是索引号</span><br></pre></td></tr></table></figure><h4 id="jQuery-常用-API"><a href="#jQuery-常用-API" class="headerlink" title="jQuery 常用 API"></a>jQuery 常用 API</h4><p>api 查询网址 <a href="https://jquery.cuishifeng.cn/">https://jquery.cuishifeng.cn/</a></p><h4 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h4><h5 id="jQuery-基础选择器"><a href="#jQuery-基础选择器" class="headerlink" title="jQuery 基础选择器"></a>jQuery 基础选择器</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;选择器&quot;</span>); <span class="comment">//里面选择器直接写css选择器即可，但是要加引号</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>id 选择器</td><td>$(“#id”)</td><td>获取指定 id 的元素</td></tr><tr><td>全选选择器</td><td>$(“*“)</td><td>匹配所有元素</td></tr><tr><td>类选择器</td><td>$(“.class”)</td><td>获取同一类 class 的元素</td></tr><tr><td>标签选择器</td><td>$(“div”)</td><td>获取同一类标签的所有元素</td></tr><tr><td>并集选择器</td><td>$(“div,p,li”)</td><td>获取多个元素</td></tr><tr><td>交集选择器</td><td>$(“li.current”)</td><td>交集元素</td></tr><tr><td>子代选择器</td><td>$(“ul&gt;li”)</td><td>使用&gt;号，获取亲儿子层级的元素；注意，并不会获取孙子层级的元素</td></tr><tr><td>后代选择器</td><td>$(“ul li”)</td><td>使用空格，代表后代选择器，获取 ul 下的所有 li 元素，包括孙子等</td></tr></tbody></table><p>jQuery 设置样式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).css(<span class="string">&quot;属性&quot;</span>, <span class="string">&quot;值&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="jQuery-筛选选择器"><a href="#jQuery-筛选选择器" class="headerlink" title="jQuery 筛选选择器"></a>jQuery 筛选选择器</h5><table><thead><tr><th>语法</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>:first</td><td>$(“li:first”)</td><td>获取第一个 li 元素</td></tr><tr><td>:last</td><td>$(“li:last”)</td><td>获取最后一个 li 元素</td></tr><tr><td>:eq(index)</td><td>$(“li:eq(2)”)</td><td>选择获取到的 li 元素索引号为 2 的元素，索引号从 0 开始</td></tr><tr><td>:odd</td><td>$(“li:odd”)</td><td>获取索引号为奇数的元素</td></tr><tr><td>:even</td><td>$(“li:even”)</td><td>获取索引号为偶数的元素</td></tr></tbody></table><h5 id="jQuery-筛选方法"><a href="#jQuery-筛选方法" class="headerlink" title="jQuery 筛选方法"></a>jQuery 筛选方法</h5><table><thead><tr><th>语法</th><th>用法</th><th>说明</th></tr></thead><tbody><tr><td>parent()</td><td>$(“li”).parent()</td><td>查找父级</td></tr><tr><td>children(selector)</td><td>$(“ul”).children(“li”)</td><td>相当于$(“ul&gt;li”)</td></tr><tr><td>find(selector)</td><td>$(“ul”).find(“li”)</td><td>相当于$(“ul li”)</td></tr><tr><td>siblings(selector)</td><td>$(“first”).siblings(“li”)</td><td>查找兄弟节点，不包括自己本身</td></tr><tr><td>nextAll([expr])</td><td>$(“.first”).nextAll()</td><td>查找当前元素之后所有的同辈元素</td></tr><tr><td>prevAll([expr])</td><td>$(“.last”).prevAll()</td><td>查找当前元素之前的所有同辈元素</td></tr><tr><td>hasClass(class)</td><td>$(“div”).hasClass(“protected”)</td><td>检查当前的元素是否含有某个特定的类，如果有，则返回 true</td></tr><tr><td>eq(index)</td><td>$(“li”).eq(2)</td><td>相当于$(“li:eq(2)”),index 从 0 开始</td></tr></tbody></table><h5 id="jQuery-排他思想"><a href="#jQuery-排他思想" class="headerlink" title="jQuery 排他思想"></a>jQuery 排他思想</h5><p>示例代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;<span class="string">&quot; &quot;</span>&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="comment">//隐式迭代，给所有按钮都绑定了点击事件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">      $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 2.当前的元素变化背景颜色</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="built_in">this</span>).css(<span class="string">&quot;background&quot;</span>, <span class="string">&quot;skyblue&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 其余兄弟节点去掉背景颜色</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="built_in">this</span>).siblings(<span class="string">&quot;button&quot;</span>).css(<span class="string">&quot;background&quot;</span>, <span class="string">&quot;&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    )</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h5 id="链式编程"><a href="#链式编程" class="headerlink" title="链式编程"></a>链式编程</h5><blockquote><p>链式编程是为了节约代码量，看起来更优雅</p></blockquote><p>例如上个例子中的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">this</span>).css(<span class="string">&quot;background&quot;</span>, <span class="string">&quot;skyblue&quot;</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">this</span>).siblings(<span class="string">&quot;button&quot;</span>).css(<span class="string">&quot;background&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p>可以简化为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">this</span>).css(<span class="string">&quot;background&quot;</span>, <span class="string">&quot;skyblue&quot;</span>).siblings(<span class="string">&quot;button&quot;</span>).css(<span class="string">&quot;background&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="jQuery-样式操作"><a href="#jQuery-样式操作" class="headerlink" title="jQuery 样式操作"></a>jQuery 样式操作</h4><h5 id="操作-css-方法"><a href="#操作-css-方法" class="headerlink" title="操作 css 方法"></a>操作 css 方法</h5><p>jQuery 可以使用 css 方法来修改简单元素样式，也可以操作类，修改多个样式</p><ol><li>参数只写属性名，则返回属性值</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">this</span>).css(<span class="string">&quot;color&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>参数是属性名，属性值，逗号分隔，是设置一组样式，属性必须加引号，值如果是数字可以不用跟单位和引号</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">this</span>).css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>参数可以是对象形式，方便设置多组样式。属性名和属性值用冒号隔开，属性可以不用加引号</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">this</span>).css(&#123; <span class="attr">backgroundColor</span>: <span class="string">&quot;white&quot;</span>, <span class="string">&quot;font-size&quot;</span>: <span class="string">&quot;20px&quot;</span> &#125;);</span><br><span class="line"><span class="comment">// 注意：如果属性为复合属性，则必须使用驼峰命名法</span></span><br></pre></td></tr></table></figure><h5 id="设置类样式方法"><a href="#设置类样式方法" class="headerlink" title="设置类样式方法"></a>设置类样式方法</h5><ol><li>添加类</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).addClass(<span class="string">&quot;current&quot;</span>);</span><br><span class="line"><span class="comment">// current 为提前在css中写好的类名</span></span><br></pre></td></tr></table></figure><ol start="2"><li>移除类</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).removeClass(<span class="string">&quot;current&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>切换类</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).toggleClass(<span class="string">&quot;current&quot;</span>);</span><br><span class="line"><span class="comment">// 如果有current类名则移除，没有则添加</span></span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;./jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            height: 96vh;</span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            height: 200px;</span><br><span class="line">            width: 200px;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        .current&#123;</span><br><span class="line">        background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;adads</span><br><span class="line">        $(function()&#123;</span><br><span class="line">            // $(&quot;div&quot;).click(function()&#123;</span><br><span class="line">            //     $(this).addClass(&quot;current&quot;)</span><br><span class="line">            // &#125;)</span><br><span class="line">            // $(&quot;div&quot;).click(function()&#123;</span><br><span class="line">            //     $(this).removeClass(&quot;current&quot;)</span><br><span class="line">            // &#125;)</span><br><span class="line">            $(&quot;div&quot;).click(function()&#123;</span><br><span class="line">                $(this).toggleClass(&quot;current&quot;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="类操作与-className-的区别"><a href="#类操作与-className-的区别" class="headerlink" title="类操作与 className 的区别"></a>类操作与 className 的区别</h5><p>原生 js 中 className 会覆盖元素元素原先里面的类名<br>jQuery 里面类操作只是对指定类进行操作，不影响原先的类名</p><h4 id="jQuery-效果"><a href="#jQuery-效果" class="headerlink" title="jQuery 效果"></a>jQuery 效果</h4><h5 id="显示与隐藏效果"><a href="#显示与隐藏效果" class="headerlink" title="显示与隐藏效果"></a>显示与隐藏效果</h5><ol><li>显示隐藏语法规范</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show([speed], [easing], [fn]); <span class="comment">//显示</span></span><br><span class="line">hide([speed], [easing], [fn]); <span class="comment">//隐藏</span></span><br><span class="line">toggle([speed], [easing], [fn]); <span class="comment">//切换</span></span><br></pre></td></tr></table></figure><ol start="2"><li>参数</li></ol><ul><li>参数都可以省略，无动画直接显示（一般情况下都不加参数）</li><li>speed：三种预定速度之一的字符串（”slow”,”normal”,”fast”）或表示动画时长的毫秒数值（如：1000）</li><li>easing： （Optional）用来指定切换效果，默认是 swing，可用参数”linear”</li><li>fn: 回调函数，在动画完成时执行的函数，每个元素执行一次</li></ul><h5 id="滑动效果"><a href="#滑动效果" class="headerlink" title="滑动效果"></a>滑动效果</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slideUp([[speed, [easing]], [fn]]); <span class="comment">// 上滑</span></span><br><span class="line">slideDown([[speed, [easing]], [fn]]); <span class="comment">// 下滑</span></span><br><span class="line">slideToggle([[speed, [easing]], [fn]]); <span class="comment">// 切换</span></span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>上滑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>下滑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">          .eq(<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">          .click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;div&quot;</span>).slideUp();</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">          .eq(<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">          .click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;div&quot;</span>).slideDown();</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="javascript">          .eq(<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">          .click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;div&quot;</span>).slideToggle();</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="事件切换"><a href="#事件切换" class="headerlink" title="事件切换"></a>事件切换</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hover[([over], out)];</span><br></pre></td></tr></table></figure><p>over: 鼠标移到元素上要触发的函数（相当于 mouseenter）<br>out： 鼠标移出元素要触发的函数（相当于 mouseleave）</p><h5 id="动画队列及停止排队方法"><a href="#动画队列及停止排队方法" class="headerlink" title="动画队列及停止排队方法"></a>动画队列及停止排队方法</h5><ol><li><p>动画或效果队列<br>动画效果一旦触发就会执行，如果多次触发，就造成多个动画效果排队执行</p></li><li><p>停止排队</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop();</span><br></pre></td></tr></table></figure><p>(1) stop 方法用于停止动画或效果<br>(2)注意： stop()写到动画或者效果的前面，相当于停止结束上一次的动画</p><h5 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h5><ol><li> 语法</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animate(params, [speed], [easing], [fn]);</span><br></pre></td></tr></table></figure><ol start="2"><li> 参数</li></ol><ul><li>params:想要更改的样式属性，以对象的形式传递，必须写。属性名可以不用带引号，如果是复合属性则需要采取驼峰命名法，其余参数都可以省略。</li><li>speed：三种预定速度之一的字符串（”slow”,”normal”,”fast”）或表示动画时长的毫秒数值（如：1000）</li><li>easing： （Optional）用来指定切换效果，默认是 swing，可用参数”linear”</li><li>fn: 回调函数，在动画完成时执行的函数，每个元素执行一次</li></ul><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>动画效果<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&quot;div&quot;</span>).animate(</span></span><br><span class="line"><span class="javascript">            &#123;</span></span><br><span class="line"><span class="javascript">              <span class="attr">left</span>: <span class="number">100</span>,</span></span><br><span class="line"><span class="javascript">              <span class="attr">top</span>: <span class="number">300</span>,</span></span><br><span class="line"><span class="javascript">              <span class="attr">width</span>: <span class="number">500</span>,</span></span><br><span class="line"><span class="javascript">              <span class="attr">opacity</span>: <span class="number">0.4</span>,</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="number">500</span></span></span><br><span class="line"><span class="javascript">          );</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="jQuery-属性操作"><a href="#jQuery-属性操作" class="headerlink" title="jQuery 属性操作"></a>jQuery 属性操作</h4><h5 id="设置或获取元素固有属性值-prop"><a href="#设置或获取元素固有属性值-prop" class="headerlink" title="设置或获取元素固有属性值 prop()"></a>设置或获取元素固有属性值 prop()</h5><p>所谓元素固有属性就是元素本身自带的属性，比如&lt; a &gt;元素里的 href</p><h6 id="1-获取属性语法"><a href="#1-获取属性语法" class="headerlink" title="1.获取属性语法"></a>1.获取属性语法</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">props(<span class="string">&quot;属性&quot;</span>);</span><br></pre></td></tr></table></figure><h6 id="2-设置属性语法"><a href="#2-设置属性语法" class="headerlink" title="2.设置属性语法"></a>2.设置属性语法</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prop(<span class="string">&quot;属性&quot;</span>, <span class="string">&quot;属性值&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="设置或获取元素自定义属性-attr"><a href="#设置或获取元素自定义属性-attr" class="headerlink" title="设置或获取元素自定义属性 attr()"></a>设置或获取元素自定义属性 attr()</h5><p>用户自己给元素添加的属性，我们称为自定义属性，比如给 div 添加 index=”1”.</p><h6 id="1-获取属性语法-1"><a href="#1-获取属性语法-1" class="headerlink" title="1.获取属性语法"></a>1.获取属性语法</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attr(<span class="string">&quot;属性&quot;</span>); <span class="comment">//类似原生getAttribute()</span></span><br></pre></td></tr></table></figure><h6 id="2-设置属性语法-1"><a href="#2-设置属性语法-1" class="headerlink" title="2.设置属性语法"></a>2.设置属性语法</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attr(<span class="string">&quot;属性&quot;</span>, <span class="string">&quot;属性值&quot;</span>); <span class="comment">//类似原生setAttriubute()</span></span><br></pre></td></tr></table></figure><h4 id="jQuery-内容文本值"><a href="#jQuery-内容文本值" class="headerlink" title="jQuery 内容文本值"></a>jQuery 内容文本值</h4><p>主要针对元素的内容还有表单的值操作</p><ol><li>普通元素内容 html()(相当于原生 innerHTML)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">html(); <span class="comment">//获取元素的内容</span></span><br><span class="line">html(<span class="string">&quot;内容&quot;</span>); <span class="comment">//设置元素的内容</span></span><br></pre></td></tr></table></figure><ol start="2"><li>普通元素文本内容 text() (相当于原生 innerText)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text(); <span class="comment">//获取元素的文本内容</span></span><br><span class="line">text(<span class="string">&quot;文本内容&quot;</span>); <span class="comment">//设置元素的文本内容</span></span><br></pre></td></tr></table></figure><ol start="3"><li>表单元素的值 val() (相当于原生 value)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">val(); <span class="comment">//获取元素的文本内容</span></span><br><span class="line">val(<span class="string">&quot;文本内容&quot;</span>); <span class="comment">//设置元素的文本内容</span></span><br></pre></td></tr></table></figure><h4 id="jQuery-元素操作"><a href="#jQuery-元素操作" class="headerlink" title="jQuery 元素操作"></a>jQuery 元素操作</h4><p>主要是遍历、创建、添加、删除元素操作</p><h5 id="遍历元素"><a href="#遍历元素" class="headerlink" title="遍历元素"></a>遍历元素</h5><p>jQuery 隐式迭代是对同一类元素做了同样的操作，如果想要给同一类元素做不同操作，就需要用到遍历。</p><p>语法 1：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, domEle</span>) </span>&#123;</span><br><span class="line">  xxx;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol><li>each()方法遍历匹配的每一个元素，主要用 DOM 处理。 2.里面的回调函数有两个参数： index 是每个元素的索引号，demEle 是每个元素的 DOM 元素对象，不是 jquery 对象</li></ol><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通过遍历给三个div设置不同颜色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>第一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>第二个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>第三个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> arr = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>];</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;div&quot;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">i, element</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//回调参数第一个一定是索引号，可以自己指定索引号名称</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(i);</span></span><br><span class="line"><span class="javascript">          <span class="comment">//回调参数第二个参数一定是DOM对象</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(element);</span></span><br><span class="line"><span class="javascript">          <span class="comment">//DOM对象没有css方法，需要转化为jquery对象</span></span></span><br><span class="line"><span class="javascript">          $(element).css(<span class="string">&quot;color&quot;</span>, arr[i]);</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>语法 2：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.each(object, <span class="function"><span class="keyword">function</span> (<span class="params">index, element</span>) </span>&#123;</span><br><span class="line">  xxx;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol><li>$.each()方法可用于遍历任何对象，主要用于数据处理，比如数组、对象</li><li>里面的函数有两个参数： index 是每个元素的索引号，element 是遍历内容</li></ol><h5 id="创建元素"><a href="#创建元素" class="headerlink" title="创建元素"></a>创建元素</h5><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;&lt;li&gt;&lt;/li&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>动态的创建了一个&lt; li &gt;</p><h5 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h5><h6 id="内部添加"><a href="#内部添加" class="headerlink" title="内部添加"></a>内部添加</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.append(<span class="string">&quot;内容&quot;</span>);</span><br></pre></td></tr></table></figure><p>把内容放入匹配元素的最后面，类似于原生 appendChild</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.prepend(<span class="string">&quot;内容&quot;</span>);</span><br></pre></td></tr></table></figure><p>把内容放入匹配元素的最前面</p><h6 id="外部添加"><a href="#外部添加" class="headerlink" title="外部添加"></a>外部添加</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.after(<span class="string">&quot;内容&quot;</span>); <span class="comment">//把内容放入目标元素后面</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.before(<span class="string">&quot;内容&quot;</span>); <span class="comment">//把内容放入目标元素前面</span></span><br></pre></td></tr></table></figure><p>内部添加元素，生成之后，他们是父子关系<br>外部添加元素，生成之后，他们是兄弟关系</p><h5 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.remove(); <span class="comment">//删除匹配的元素（本身）</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.empty(); <span class="comment">//删除匹配的元素集合中的所有子节点</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.html(<span class="string">&quot;&quot;</span>); <span class="comment">//清空匹配的元素内容</span></span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>初始li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>初始div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1.创建元素</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> li = $(<span class="string">&quot; &lt;li&gt;后来创建的li&lt;/li&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//  2.添加元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// (1)内部添加</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(&quot;ul&quot;).append(li);</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;ul&quot;</span>).prepend(li);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// (2)外部添加</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> div = $(<span class="string">&quot;&lt;div&gt;我是后来创建的div&lt;/div&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(&quot;div&quot;).after(div);</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;div&quot;</span>).before(div);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 3.删除元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(&#x27;ul&#x27;).remove();//可以删除匹配的元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(&#x27;ul&#x27;).empty();//删除匹配元素里面的子节点</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;ul&quot;</span>).html(<span class="string">&quot;&quot;</span>); <span class="comment">//清空匹配的元素内容</span></span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="jquery-尺寸和位置"><a href="#jquery-尺寸和位置" class="headerlink" title="jquery 尺寸和位置"></a>jquery 尺寸和位置</h4><h5 id="jquery-尺寸方法"><a href="#jquery-尺寸方法" class="headerlink" title="jquery 尺寸方法"></a>jquery 尺寸方法</h5><table><thead><tr><th>语法</th><th>用法</th></tr></thead><tbody><tr><td>width() / height()</td><td>取得匹配元素的宽度和高度值 只算 width/height</td></tr><tr><td>innerWidth() / innerHeight()</td><td>取得匹配元素的宽度和高度值 包含 padding</td></tr><tr><td>outerWidth() / outerHeight()</td><td>取得匹配元素的宽度和高度值 包含 padding、border</td></tr><tr><td>outerWidth(true) / outerHeight(true)</td><td>取得匹配元素的宽度和高度值 包含 padding、border、margin</td></tr></tbody></table><ul><li>以上参数为空，则是获取相应值，返回的是数字型</li><li>如果参数为数字，则是修改相应值</li><li>参数可以不必写单位</li></ul><h5 id="jquery-位置"><a href="#jquery-位置" class="headerlink" title="jquery 位置"></a>jquery 位置</h5><ol><li>offset()设置或获取元素偏移</li></ol><ul><li>offset()方法设置或返回被选元素相对于文档的偏移坐标，跟父级没有关系</li><li>该方法有两个属性 left、top。offset().top 用于获取距离文档顶部的距离，offset().left 用于获取距离文档左侧的距离。</li><li>可以设置元素的偏移：offset({top:10;left:30});</li></ul><ol start="2"><li>position()获取元素偏移</li></ol><ul><li>position()方法用于返回被选元素相对于带有定位的父级偏移坐标，如果父级都没有定位，则以文档为准。</li></ul><ol start="3"><li>scrollTop()/scrollLeft()设置或获取元素被卷去的头部或左侧</li></ol><ul><li>scrollTop()设置或返回被选元素被卷去的头部</li><li>scrollLeft()设置或返回被选元素被卷去的左侧</li></ul><h4 id="jquery-事件"><a href="#jquery-事件" class="headerlink" title="jquery 事件"></a>jquery 事件</h4><h5 id="jquery-事件注册"><a href="#jquery-事件注册" class="headerlink" title="jquery 事件注册"></a>jquery 事件注册</h5><h6 id="单个事件注册"><a href="#单个事件注册" class="headerlink" title="单个事件注册"></a>单个事件注册</h6><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">element.事件(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line">$(<span class="string">&quot;div&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  事件处理程序;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其他事件和原生基本一致<br>比如 mouseover、mouseout、blur、focus、change、keydown、keyup、resize、scroll 等</p><h5 id="jquery-事件处理"><a href="#jquery-事件处理" class="headerlink" title="jquery 事件处理"></a>jquery 事件处理</h5><h6 id="事件处理-on-绑定事件"><a href="#事件处理-on-绑定事件" class="headerlink" title="事件处理 on()绑定事件"></a>事件处理 on()绑定事件</h6><p>on()方法可以绑定一个或多个事件的事件处理函数</p><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.on(events, [selector], fn);</span><br></pre></td></tr></table></figure><ol><li>events:一个或多个用空格分隔的事件类型，如”click”或”keydown”</li><li>selector:元素的子元素选择器</li><li>fn：回调函数 及绑定在元素身上的监听函数</li></ol><ul><li>on()方法优势 1：<br>可以绑定多个事件，多个事件处理程序。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).on(&#123;</span><br><span class="line">  <span class="attr">mouseover</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  <span class="attr">mouseout</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  <span class="attr">click</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果事件处理程序相同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).on(<span class="string">&quot;mouseover mouseout&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).toggleClass(<span class="string">&quot;current&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>on()方法优势 2：<br>可以事件委派操作，事件委派的定义是，把原来加给子元素身上的事件绑定在父元素身上，就是把事件委派给父元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;ul&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;li&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在此之前有 bind(),live(),delegate()等方法来处理事件绑定或者事件委派，最新版本用 on 来代替他们</p><ul><li>on()方法优势 3：<br>动态创建的元素，click()没有办法绑定事件，on()可以给动态生成的元素绑定事件。</li></ul><h6 id="事件处理-off-解绑事件"><a href="#事件处理-off-解绑事件" class="headerlink" title="事件处理 off()解绑事件"></a>事件处理 off()解绑事件</h6><p>off()方法可以移除通过 on()方法添加的事件处理程序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).off(); <span class="comment">//解绑p元素所有事件处理程序</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).off(<span class="string">&quot;click&quot;</span>); <span class="comment">//解绑p元素上面的点击事件</span></span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).off(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;li&quot;</span>); <span class="comment">//解绑事件委托</span></span><br></pre></td></tr></table></figure><p>如果有的事件只想触发一次，可以使用 one()来绑定事件</p><h6 id="自动触发事件-trigger"><a href="#自动触发事件-trigger" class="headerlink" title="自动触发事件 trigger()"></a>自动触发事件 trigger()</h6><p>有些事件希望自动触发，比如轮播图自动播放功能跟点击右侧按钮一致。可以利用定时器自动触发右侧按钮点击事件，不必鼠标点击触发。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.click(); <span class="comment">//第一种简写形式</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.trigger(<span class="string">&quot;type&quot;</span>); <span class="comment">//第二种自动触发模式</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">&quot;hi&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).trigger(<span class="string">&quot;click&quot;</span>); <span class="comment">//此时自动触发事件，不需要鼠标点击</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.triggerHandler(type); <span class="comment">//第三种自动触发模式，会阻止元素默认行为</span></span><br></pre></td></tr></table></figure><h5 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h5><p>事件被触发，就会有事件对象的产生</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.on(events, [selector], <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure><p>阻止默认行为：event.preventDefault() 或者 return false<br>阻止冒泡：event.stopPropagation()</p><h4 id="jquery-其他方法"><a href="#jquery-其他方法" class="headerlink" title="jquery 其他方法"></a>jquery 其他方法</h4><h5 id="jquery-对象拷贝"><a href="#jquery-对象拷贝" class="headerlink" title="jquery 对象拷贝"></a>jquery 对象拷贝</h5><p>如果想要把某个对象拷贝(合并)给另外一个对象使用，此时可以用$.extend()方法<br>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.extend([deep], target, object1, [objectN]);</span><br></pre></td></tr></table></figure><ul><li>deep:如果设为 true 为深拷贝，默认为 false 浅拷贝</li><li>target：要拷贝的目标对象</li><li>object：待拷贝到第一个对象的对象</li><li>objectN： 待拷贝到第 N 个对象的对象</li><li>浅拷贝是把被拷贝的对象复杂数据类型中的地址拷贝给目标对象该目标对象会影响被拷贝的对象</li><li>深拷贝，前面加 true，完全克隆(拷贝的对象，而不是地址)，修改目标对象不会影响被拷贝对象。</li></ul><h5 id="jquery-多库共存"><a href="#jquery-多库共存" class="headerlink" title="jquery 多库共存"></a>jquery 多库共存</h5><h6 id="问题概述："><a href="#问题概述：" class="headerlink" title="问题概述："></a>问题概述：</h6><p>jQuery 使用 <code>$</code>作为标识符随着 jQuery 的流行，其他库也会使用<code>$</code>作为标识符，这样一起用会引起冲突</p><h6 id="客观需求："><a href="#客观需求：" class="headerlink" title="客观需求："></a>客观需求：</h6><p>需要一个解决方案，让 jquery 和其他的 js 库不存在冲突，可以同时存在，这就叫做多库共存</p><h6 id="jquery-解决方案"><a href="#jquery-解决方案" class="headerlink" title="jquery 解决方案"></a>jquery 解决方案</h6><ol><li>把里面的$统一改为 jQuery。比如 jQuery(“div”)</li><li>jQuery 变量规定新的名称：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.noConfct() <span class="keyword">var</span> xx=$.noConfct();</span><br></pre></td></tr></table></figure><h5 id="jQuery-插件"><a href="#jQuery-插件" class="headerlink" title="jQuery 插件"></a>jQuery 插件</h5><p>jQuery 功能比较有限，想要更复杂的特效效果可以借助于 jQue 插件完成。<br>注意:这些插件也是依赖于 jQuery 来完成的，所以必须要先引入 jQuery 文件，因此也称为 jQuery 插件</p><h6 id="jQuery-插件常用的网站"><a href="#jQuery-插件常用的网站" class="headerlink" title="jQuery 插件常用的网站"></a>jQuery 插件常用的网站</h6><ol><li>jQuery 插件库： <a href="http://www.jq22.com/">http://www.jq22.com</a></li><li>jQuery 之家: <a href="http://www.htmleaf.com/">http://www.htmleaf.com</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flex布局</title>
      <link href="/2022/02/22/flex%E5%B8%83%E5%B1%80/"/>
      <url>/2022/02/22/flex%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h4 id="常见父项属性"><a href="#常见父项属性" class="headerlink" title="常见父项属性"></a>常见父项属性</h4><p>以下6个属性是对父元素设置的</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>flex-direction</td><td>设置主轴方向</td></tr><tr><td>justify-content</td><td>设置主轴上的子元素排列方向</td></tr><tr><td>flex-wrap</td><td>设置子元素是否换行</td></tr><tr><td>align-content</td><td>设置侧轴上的子元素排列方式（多行）</td></tr><tr><td>align-items</td><td>设置侧轴上的子元素排列方式（单行）</td></tr><tr><td>flex-flow</td><td>复合属性，相当于同时设置了flex-driection和flex-wrap</td></tr></tbody></table><span id="more"></span><h5 id="flex-direction-设置主轴方向"><a href="#flex-direction-设置主轴方向" class="headerlink" title="flex-direction 设置主轴方向"></a>flex-direction 设置主轴方向</h5><p>1.主轴和侧轴<br>在flex布局中，是分为主轴和侧轴两个方向，同样的叫法有：行和列，x轴和y轴</p><ul><li>默认的主轴方向就是x轴方向，水平向右</li><li>默认的副轴方向就是y轴方向，水平向下</li></ul><p>2.属性值</p><p>flex-direction属性决定主轴的方向（即项目的排列方向）<br>注意： 主轴和侧轴是会变化的，就看flex-direction设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>row</td><td>从左到右（默认值）</td></tr><tr><td>row-reverse</td><td>从右到左</td></tr><tr><td>column</td><td>从上到下</td></tr><tr><td>column-reverse</td><td>从下到上</td></tr></tbody></table><h5 id="justify-content-设置主轴上子元素的排列方式"><a href="#justify-content-设置主轴上子元素的排列方式" class="headerlink" title="justify-content 设置主轴上子元素的排列方式"></a>justify-content 设置主轴上子元素的排列方式</h5><p>justify-content属性定义了项目在主轴上的对齐方式</p><p>注意： 使用这个属性之前一定要确定好主轴是哪个</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值，如果主轴是x轴，则从左到右</td></tr><tr><td>flex-end</td><td>从尾部开始pai排列</td></tr><tr><td>center</td><td>主轴居中对齐</td></tr><tr><td>space-around</td><td>平分剩余空间</td></tr><tr><td>space-between</td><td>先两边贴合，再平分剩余空间</td></tr></tbody></table><h5 id="flex-wrap设置子元素是否换行"><a href="#flex-wrap设置子元素是否换行" class="headerlink" title="flex-wrap设置子元素是否换行"></a>flex-wrap设置子元素是否换行</h5><p>默认情况下，项目都排在一条线（轴线）上。flex布局默认不换行</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>nowrap</td><td>默认值，不换行</td></tr><tr><td>wrap</td><td>换行</td></tr></tbody></table><h5 id="align-items设置侧轴上的子元素排列方式（单行）"><a href="#align-items设置侧轴上的子元素排列方式（单行）" class="headerlink" title="align-items设置侧轴上的子元素排列方式（单行）"></a>align-items设置侧轴上的子元素排列方式（单行）</h5><p>该属性数控制子项在侧轴（默认y轴）上的排列方式，该子项为单项的时候使用</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值 从上到下</td></tr><tr><td>flex-end</td><td>从下到上</td></tr><tr><td>center</td><td>挤在一起居中（垂直居中）</td></tr><tr><td>stretch</td><td>拉伸</td></tr></tbody></table><h5 id="align-content-设置侧轴上的子元素的排列方式（多行）"><a href="#align-content-设置侧轴上的子元素的排列方式（多行）" class="headerlink" title="align-content 设置侧轴上的子元素的排列方式（多行）"></a>align-content 设置侧轴上的子元素的排列方式（多行）</h5><p>设置子项在侧轴上的排列方式，并且只能用于子项出现换行的情况（多行），在单行下是没有效果的</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值 在侧轴的头部开始排列</td></tr><tr><td>flex-end</td><td>在侧轴的尾部开始排列</td></tr><tr><td>center</td><td>在侧轴中间显示</td></tr><tr><td>space-around</td><td>子项在侧轴平分剩余空间</td></tr><tr><td>space-between</td><td>子项在侧轴先分布在两头，再平分剩余空间</td></tr><tr><td>stretch</td><td>设置子项元素高度平分父元素高度</td></tr></tbody></table><p>总结：单行用align-items，多行用align-content</p><h5 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h5><p>flex-flow属性是flex-direction和flex-wrap属性的复合属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>: column wrap;</span><br></pre></td></tr></table></figure><h4 id="flex布局子项常见属性"><a href="#flex布局子项常见属性" class="headerlink" title="flex布局子项常见属性"></a>flex布局子项常见属性</h4><ul><li>flex子项目占的份数</li><li>align-self控制子项自己在侧轴的排列方式</li><li>order属性定义子项的排列顺序（前后顺序）</li></ul><h5 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h5><p>flex属性定义子项目分配剩余空间，用flex来表示占多少份数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>: &lt;number&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="align-self-控制子项自己在侧轴上的排列方式"><a href="#align-self-控制子项自己在侧轴上的排列方式" class="headerlink" title="align-self 控制子项自己在侧轴上的排列方式"></a>align-self 控制子项自己在侧轴上的排列方式</h5><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性，如果没有父元素，则等同于stretch</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置自己在侧轴上的排列方式 */</span></span><br><span class="line">    <span class="attribute">align-self</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="order属性定义项目的排列顺序"><a href="#order属性定义项目的排列顺序" class="headerlink" title="order属性定义项目的排列顺序"></a>order属性定义项目的排列顺序</h5><p>数值越小，排列越靠前，默认为0</p><p>注意： 和z-index不一样</p>]]></content>
      
      
      
        <tags>
            
            <tag> flex </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>当我真正开始爱自己</title>
      <link href="/2021/11/16/%E5%BD%93%E6%88%91%E7%9C%9F%E6%AD%A3%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1/"/>
      <url>/2021/11/16/%E5%BD%93%E6%88%91%E7%9C%9F%E6%AD%A3%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1/</url>
      
        <content type="html"><![CDATA[<p>当我真正开始爱自己<br>                 卓别林<br>当我真正开始爱自己，<br>我才认识到，所有的痛苦和情感的折磨，<br>都只是提醒我：活着，不要违背自己的本心。<br>今天我明白了，这叫做“真实”。</p><p>当我真正开始爱自己，<br>我才懂得，把自己的愿望强加于人，<br>是多么的无礼，就算我知道，时机并不成熟，<br>那人也还没有做好准备，<br>就算那个人就是我自己。<br>今天我明白了，这叫做“尊重”。</p><span id="more"></span><p>当我开始爱自己，<br>我不再渴求不同的人生，<br>我知道任何发生在我身边的事情，<br>都是对我成长的邀请。<br>如今，我称之为“成熟”。</p><p>当我开始真正爱自己，<br>我才明白，我其实一直都在正确的时间，<br>正确的地方，发生的一切都恰如其分。<br>由此我得以平静。<br>今天我明白了，这叫做“自信”。</p><p>当我真正开始爱自己，<br>我不再牺牲自己的自由时间，<br>不再去勾画什么宏伟的明天。<br>今天我只做有趣和快乐的事，<br>做自己热爱，让心欢喜的事，<br>用我的方式、我的韵律。<br>今天我明白了，这叫做“单纯”。</p><p>当我开始真正爱自己，<br>我开始远离一切不健康的东西。<br>不论是饮食和人物，还是事情和环境，<br>我远离一切让我远离本真的东西。<br>从前我把这叫做“追求健康的自私自利”，<br>但今天我明白了，这是“自爱”。</p><p>当我开始真正爱自己，<br>我不再总想着要永远正确，不犯错误。<br>我今天明白了，这叫做“谦逊”。</p><p>当我开始真正爱自己，<br>我不再继续沉溺于过去，<br>也不再为明天而忧虑，<br>现在我只活在一切正在发生的当下，<br>今天，我活在此时此地，<br>如此日复一日。这就叫“完美”。</p><p>当我开始真正爱自己，<br>我明白，我的思虑让我变得贫乏和病态，<br>但当我唤起了心灵的力量，<br>理智就变成了一个重要的伙伴，<br>这种组合我称之为，“心的智慧”。</p><p>我们无须再害怕自己和他人的分歧，矛盾和问题，<br>因为即使星星有时也会碰在一起，形成新的世界，<br>今天我明白，这就是“生命”</p>]]></content>
      
      
      
        <tags>
            
            <tag> 诗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令</title>
      <link href="/2021/09/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/09/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h4 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h4><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>hexo new “postName”</td><td>新建文章</td></tr><tr><td>hexo generate</td><td>生成静态页面至public目录</td></tr><tr><td>hexo server</td><td>开启预览访问端口</td></tr><tr><td>hexo deploy</td><td>部署到GitHub</td></tr><tr><td>hexo help</td><td>查看帮助</td></tr><tr><td>hexo version</td><td>查看Hexo的版本</td></tr><tr><td>hexo clean</td><td>清理public的内容</td></tr></tbody></table><span id="more"></span><h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h4><table><thead><tr><th>缩写</th><th>相当于</th></tr></thead><tbody><tr><td>hexo n</td><td>hexo new</td></tr><tr><td>hexo g</td><td>hexo generate</td></tr><tr><td>hexo s</td><td>hexo server</td></tr><tr><td>hexo d</td><td>hexo deploy</td></tr></tbody></table><h4 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h4><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>hexo s -g</td><td>生成并本地预览</td></tr><tr><td>hexo d -g</td><td>生成并上传</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first blog</title>
      <link href="/2021/09/09/first/"/>
      <url>/2021/09/09/first/</url>
      
        <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><p><img src="https://z3.ax1x.com/2021/08/03/fFS8hQ.jpg" alt="demo"></p><blockquote><p>this is a blog test</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> first </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
