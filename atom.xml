<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Raindrop</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-22T03:08:01.245Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Raindrop</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flex布局</title>
    <link href="http://example.com/2022/02/22/flex%E5%B8%83%E5%B1%80/"/>
    <id>http://example.com/2022/02/22/flex%E5%B8%83%E5%B1%80/</id>
    <published>2022-02-22T03:03:07.000Z</published>
    <updated>2022-02-22T03:08:01.245Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常见父项属性"><a href="#常见父项属性" class="headerlink" title="常见父项属性"></a>常见父项属性</h4><p>以下6个属性是对父元素设置的<br>|属性|作用|<br>|—|—|<br>|flex-direction|设置主轴方向|<br>|justify-content|设置主轴上的子元素排列方向|<br>|flex-wrap|设置子元素是否换行|<br>|align-content|设置侧轴上的子元素排列方式（多行）|<br>|align-items|设置侧轴上的子元素排列方式（单行）|<br>|flex-flow|复合属性，相当于同时设置了flex-driection和flex-wrap|</p><span id="more"></span><h5 id="flex-direction-设置主轴方向"><a href="#flex-direction-设置主轴方向" class="headerlink" title="flex-direction 设置主轴方向"></a>flex-direction 设置主轴方向</h5><p>1.主轴和侧轴<br>在flex布局中，是分为主轴和侧轴两个方向，同样的叫法有：行和列，x轴和y轴</p><ul><li>默认的主轴方向就是x轴方向，水平向右</li><li>默认的副轴方向就是y轴方向，水平向下</li></ul><p>2.属性值</p><p>flex-direction属性决定主轴的方向（即项目的排列方向）<br>注意： 主轴和侧轴是会变化的，就看flex-direction设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的<br>|属性值|说明|<br>|—|—|<br>|row|从左到右（默认值）|<br>|row-reverse|从右到左|<br>|column|从上到下|<br>|column-reverse|从下到上|</p><h5 id="justify-content-设置主轴上子元素的排列方式"><a href="#justify-content-设置主轴上子元素的排列方式" class="headerlink" title="justify-content 设置主轴上子元素的排列方式"></a>justify-content 设置主轴上子元素的排列方式</h5><p>justify-content属性定义了项目在主轴上的对齐方式</p><p>==注意：== 使用这个属性之前一定要确定好主轴是哪个<br>|属性值|说明|<br>|—|—|<br>|flex-start|默认值，如果主轴是x轴，则从左到右|<br>|flex-end|从尾部开始pai排列|<br>|center|主轴居中对齐|<br>|space-around|平分剩余空间|<br>|space-between|先两边贴合，再平分剩余空间|</p><h5 id="flex-wrap设置子元素是否换行"><a href="#flex-wrap设置子元素是否换行" class="headerlink" title="flex-wrap设置子元素是否换行"></a>flex-wrap设置子元素是否换行</h5><p>默认情况下，项目都排在一条线（轴线）上。flex布局默认不换行<br>|属性值|说明|<br>|–|–|<br>|nowrap|默认值，不换行|<br>|wrap|换行|</p><h5 id="align-items设置侧轴上的子元素排列方式（单行）"><a href="#align-items设置侧轴上的子元素排列方式（单行）" class="headerlink" title="align-items设置侧轴上的子元素排列方式（单行）"></a>align-items设置侧轴上的子元素排列方式（单行）</h5><p>该属性数控制子项在侧轴（默认y轴）上的排列方式，该子项为单项的时候使用</p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值 从上到下</td></tr><tr><td>flex-end</td><td>从下到上</td></tr><tr><td>center</td><td>挤在一起居中（垂直居中）</td></tr><tr><td>stretch</td><td>拉伸</td></tr></tbody></table><h5 id="align-content-设置侧轴上的子元素的排列方式（多行）"><a href="#align-content-设置侧轴上的子元素的排列方式（多行）" class="headerlink" title="align-content 设置侧轴上的子元素的排列方式（多行）"></a>align-content 设置侧轴上的子元素的排列方式（多行）</h5><p>设置子项在侧轴上的排列方式，并且只能用于子项出现换行的情况（多行），在单行下是没有效果的<br>|属性值|说明|<br>|–|–|<br>|flex-start|默认值 在侧轴的头部开始排列|<br>|flex-end|在侧轴的尾部开始排列|<br>|center|在侧轴中间显示|<br>|space-around|子项在侧轴平分剩余空间|<br>|space-between|子项在侧轴先分布在两头，再平分剩余空间|<br>|stretch|设置子项元素高度平分父元素高度|</p><p>==总结：== 单行用align-items，多行用align-content</p><h5 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h5><p>flex-flow属性是flex-direction和flex-wrap属性的复合属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>: column wrap;</span><br></pre></td></tr></table></figure><h4 id="flex布局子项常见属性"><a href="#flex布局子项常见属性" class="headerlink" title="flex布局子项常见属性"></a>flex布局子项常见属性</h4><ul><li>flex子项目占的份数</li><li>align-self控制子项自己在侧轴的排列方式</li><li>order属性定义子项的排列顺序（前后顺序）</li></ul><h5 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h5><p>flex属性定义子项目分配剩余空间，用flex来表示占多少==份数==</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>: &lt;number&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="align-self-控制子项自己在侧轴上的排列方式"><a href="#align-self-控制子项自己在侧轴上的排列方式" class="headerlink" title="align-self 控制子项自己在侧轴上的排列方式"></a>align-self 控制子项自己在侧轴上的排列方式</h5><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性，如果没有父元素，则等同于stretch</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置自己在侧轴上的排列方式 */</span></span><br><span class="line">    <span class="attribute">align-self</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="order属性定义项目的排列顺序"><a href="#order属性定义项目的排列顺序" class="headerlink" title="order属性定义项目的排列顺序"></a>order属性定义项目的排列顺序</h5><p>数值越小，排列越靠前，默认为0<br>==注意：== 和z-index不一样</p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;常见父项属性&quot;&gt;&lt;a href=&quot;#常见父项属性&quot; class=&quot;headerlink&quot; title=&quot;常见父项属性&quot;&gt;&lt;/a&gt;常见父项属性&lt;/h4&gt;&lt;p&gt;以下6个属性是对父元素设置的&lt;br&gt;|属性|作用|&lt;br&gt;|—|—|&lt;br&gt;|flex-direction|设置主轴方向|&lt;br&gt;|justify-content|设置主轴上的子元素排列方向|&lt;br&gt;|flex-wrap|设置子元素是否换行|&lt;br&gt;|align-content|设置侧轴上的子元素排列方式（多行）|&lt;br&gt;|align-items|设置侧轴上的子元素排列方式（单行）|&lt;br&gt;|flex-flow|复合属性，相当于同时设置了flex-driection和flex-wrap|&lt;/p&gt;</summary>
    
    
    
    
    <category term="flex,css" scheme="http://example.com/tags/flex-css/"/>
    
  </entry>
  
  <entry>
    <title>当我真正开始爱自己</title>
    <link href="http://example.com/2021/11/16/%E5%BD%93%E6%88%91%E7%9C%9F%E6%AD%A3%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1/"/>
    <id>http://example.com/2021/11/16/%E5%BD%93%E6%88%91%E7%9C%9F%E6%AD%A3%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1/</id>
    <published>2021-11-16T12:01:50.000Z</published>
    <updated>2022-02-22T03:04:14.498Z</updated>
    
    <content type="html"><![CDATA[<p>当我真正开始爱自己<br>                 卓别林<br>当我真正开始爱自己，<br>我才认识到，所有的痛苦和情感的折磨，<br>都只是提醒我：活着，不要违背自己的本心。<br>今天我明白了，这叫做“真实”。</p><p>当我真正开始爱自己，<br>我才懂得，把自己的愿望强加于人，<br>是多么的无礼，就算我知道，时机并不成熟，<br>那人也还没有做好准备，<br>就算那个人就是我自己。<br>今天我明白了，这叫做“尊重”。</p><span id="more"></span><p>当我开始爱自己，<br>我不再渴求不同的人生，<br>我知道任何发生在我身边的事情，<br>都是对我成长的邀请。<br>如今，我称之为“成熟”。</p><p>当我开始真正爱自己，<br>我才明白，我其实一直都在正确的时间，<br>正确的地方，发生的一切都恰如其分。<br>由此我得以平静。<br>今天我明白了，这叫做“自信”。</p><p>当我真正开始爱自己，<br>我不再牺牲自己的自由时间，<br>不再去勾画什么宏伟的明天。<br>今天我只做有趣和快乐的事，<br>做自己热爱，让心欢喜的事，<br>用我的方式、我的韵律。<br>今天我明白了，这叫做“单纯”。</p><p>当我开始真正爱自己，<br>我开始远离一切不健康的东西。<br>不论是饮食和人物，还是事情和环境，<br>我远离一切让我远离本真的东西。<br>从前我把这叫做“追求健康的自私自利”，<br>但今天我明白了，这是“自爱”。</p><p>当我开始真正爱自己，<br>我不再总想着要永远正确，不犯错误。<br>我今天明白了，这叫做“谦逊”。</p><p>当我开始真正爱自己，<br>我不再继续沉溺于过去，<br>也不再为明天而忧虑，<br>现在我只活在一切正在发生的当下，<br>今天，我活在此时此地，<br>如此日复一日。这就叫“完美”。</p><p>当我开始真正爱自己，<br>我明白，我的思虑让我变得贫乏和病态，<br>但当我唤起了心灵的力量，<br>理智就变成了一个重要的伙伴，<br>这种组合我称之为，“心的智慧”。</p><p>我们无须再害怕自己和他人的分歧，矛盾和问题，<br>因为即使星星有时也会碰在一起，形成新的世界，<br>今天我明白，这就是“生命”</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;当我真正开始爱自己&lt;br&gt;                 卓别林&lt;br&gt;当我真正开始爱自己，&lt;br&gt;我才认识到，所有的痛苦和情感的折磨，&lt;br&gt;都只是提醒我：活着，不要违背自己的本心。&lt;br&gt;今天我明白了，这叫做“真实”。&lt;/p&gt;
&lt;p&gt;当我真正开始爱自己，&lt;br&gt;我才懂得，把自己的愿望强加于人，&lt;br&gt;是多么的无礼，就算我知道，时机并不成熟，&lt;br&gt;那人也还没有做好准备，&lt;br&gt;就算那个人就是我自己。&lt;br&gt;今天我明白了，这叫做“尊重”。&lt;/p&gt;</summary>
    
    
    
    
    <category term="诗" scheme="http://example.com/tags/%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令</title>
    <link href="http://example.com/2021/09/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2021/09/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-09-09T05:49:28.000Z</published>
    <updated>2021-09-09T06:00:13.198Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h4><p>hexo new “postName” #新建文章<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #部署到GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看Hexo的版本<br>hexo clean #清理public的内容</p><span id="more"></span><h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h4><p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy</p><h4 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h4><p>hexo s -g #生成并本地预览<br>hexo d -g #生成并上传</p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;常见命令&quot;&gt;&lt;a href=&quot;#常见命令&quot; class=&quot;headerlink&quot; title=&quot;常见命令&quot;&gt;&lt;/a&gt;常见命令&lt;/h4&gt;&lt;p&gt;hexo new “postName” #新建文章&lt;br&gt;hexo generate #生成静态页面至public目录&lt;br&gt;hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）&lt;br&gt;hexo deploy #部署到GitHub&lt;br&gt;hexo help  # 查看帮助&lt;br&gt;hexo version  #查看Hexo的版本&lt;br&gt;hexo clean #清理public的内容&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>first blog</title>
    <link href="http://example.com/2021/09/09/first/"/>
    <id>http://example.com/2021/09/09/first/</id>
    <published>2021-09-09T05:43:12.000Z</published>
    <updated>2021-09-09T05:46:53.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><p><img src="https://z3.ax1x.com/2021/08/03/fFS8hQ.jpg" alt="demo"></p><blockquote><p>this is a blog test</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;test&quot;&gt;&lt;a href=&quot;#test&quot; class=&quot;headerlink&quot; title=&quot;test&quot;&gt;&lt;/a&gt;test&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://z3.ax1x.com/2021/08/03/fFS8hQ.jpg&quot; alt=&quot;demo</summary>
      
    
    
    
    
    <category term="first" scheme="http://example.com/tags/first/"/>
    
  </entry>
  
</feed>
